name: Release Build

on:
  pull_request:
    types: [closed]
    branches:
      - main

permissions:
  contents: write

jobs:
  release:
    if: github.event.pull_request.merged == true
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest]

    steps:
      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install pnpm
        run: npm install -g pnpm@10.18.3

      - name: Install dependencies
        run: pnpm install

      - name: Get version from package.json
        id: version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "üì¶ Release version: $VERSION"
        shell: bash

      - name: Build application
        run: pnpm run build

      - name: Package application (Windows)
        if: matrix.os == 'windows-latest'
        run: pnpm run package
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Package application (macOS)
        if: matrix.os == 'macos-latest'
        run: pnpm run package
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CSC_IDENTITY_AUTO_DISCOVERY: false # Skip code signing if no certificate is configured

      - name: Upload artifacts (Windows)
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: windows-release
          path: |
            build/*.exe
            build/*.msi
          retention-days: 90

      - name: Upload artifacts (macOS)
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: macos-release
          path: |
            build/*.dmg
            build/*.pkg
          retention-days: 90

  create-release:
    needs: release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Get version and PR info
        id: info
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "release_name=Power Platform Tool Box v$VERSION" >> $GITHUB_OUTPUT

          # Get PR title and body
          PR_TITLE="${{ github.event.pull_request.title }}"
          PR_NUMBER="${{ github.event.pull_request.number }}"
          PR_URL="${{ github.event.pull_request.html_url }}"

          echo "pr_title=$PR_TITLE" >> $GITHUB_OUTPUT
          echo "pr_number=$PR_NUMBER" >> $GITHUB_OUTPUT
          echo "pr_url=$PR_URL" >> $GITHUB_OUTPUT
        shell: bash

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Display structure of downloaded files
        run: ls -R artifacts

      - name: Generate release notes
        id: notes
        run: |
          # Get commits since last release
          LAST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")

          if [ -z "$LAST_TAG" ]; then
            COMMITS=$(git log --oneline --no-merges | head -20)
          else
            COMMITS=$(git log --oneline --no-merges $LAST_TAG..HEAD)
          fi

          # Save commits to a file
          echo "$COMMITS" > commits.txt
        shell: bash

      - name: Create stable release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.info.outputs.version }}
          name: ${{ steps.info.outputs.release_name }}
          body: |
            # üöÄ Power Platform Tool Box v${{ steps.info.outputs.version }}

            **Release Date:** ${{ github.event.pull_request.merged_at }}
            **Merged PR:** [#${{ steps.info.outputs.pr_number }} - ${{ steps.info.outputs.pr_title }}](${{ steps.info.outputs.pr_url }})

            ## üì¶ Installation

            Choose the appropriate installer for your platform:

            ### Windows
            - Download the `.exe` file
            - Run the installer and follow the prompts

            ### macOS
            - Download the `.dmg` file
            - Open the DMG and drag the app to Applications

            ## ‚ú® What's Changed

            See the [full changelog](${{ github.server_url }}/${{ github.repository }}/compare/v${{ steps.info.outputs.version }}...dev) for all changes.

            ## üîÑ Auto-Update

            The application includes automatic update functionality. If you have a previous version installed, you will be notified when this update is available.

            ## üêõ Found a Bug?

            Please report issues at: ${{ github.server_url }}/${{ github.repository }}/issues/new

            ## üîó Links

            - [Documentation](https://github.com/PowerPlatformToolBox/desktop-app#readme)
            - [Changelog](https://github.com/PowerPlatformToolBox/desktop-app/blob/main/CHANGELOG.md)
            - [Contributing Guide](https://github.com/PowerPlatformToolBox/desktop-app/blob/main/CONTRIBUTING.md)

            ---
            *This release was automatically generated from PR merge to main.*
          files: |
            artifacts/**/*
          prerelease: false
          draft: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
